# -*- coding: utf-8 -*-
"""Day4 - Boston House Prices Prediction with Hidden Layer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WuS38fK4PHRlKRrmQ6WUS-aSs4p4q9ri
"""

###########################
# 라이브러리 사용
import tensorflow as tf
import pandas as pd

###########################
# 1.과거의 데이터를 준비합니다.
파일경로 = 'https://raw.githubusercontent.com/blackdew/tensorflow1/master/csv/boston.csv'
보스턴 = pd.read_csv(파일경로)
print(보스턴.columns)
보스턴.head()

"""crim : 범죄율, 
zn,
indus,
chas : (찰스) 강변,
nox, 
rm, 평균 방 수
age : 노후주택 비율, 
dis, 
rad, 
tax : 재산세 비율,       
ptratio : 학생 / 교사 비율, 
b, 
lstat : 하위계층 비율, 
medv : 집값
"""

# 독립변수, 종속변수 분리 
독립 = 보스턴 [['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',
       'ptratio', 'b', 'lstat']]
종속 = 보스턴 [['medv']]
print(독립.shape, 종속.shape)

###########################
# 2. 모델의 구조를 만듭니다
X = tf.keras.layers.Input(shape=[13])
# 활성화 함수 추가(10개의 노드)
H = tf.keras.layers.Dense(10, activation='swish')(X) 
Y = tf.keras.layers.Dense(1)(H)
model = tf.keras.models.Model(X, Y)
model.compile(loss = 'mse')

model.summary()

###########################
# 3.데이터로 모델을 학습(FIT)합니다.
model.fit(독립, 종속, epochs=1000, verbose=0)
model.fit(독립, 종속, epochs=10)

###########################
# 4. 모델을 이용합니다
print(model.predict(독립[5:10]))
# 종속변수 확인
print(종속[5:10])

###########################
# 모델의 수식 확인
model.get_weights()

